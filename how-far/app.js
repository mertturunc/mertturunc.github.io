var map=L.map("map",{zoomControl:!1}).setView([41.015,28.979],11);window.map=map;try{map.boxZoom.disable()}catch(e){}const SEARCH_BOUNDS=[28.6,40.65,29.6,41.3];!function(){try{var e=L.latLng(SEARCH_BOUNDS[1],SEARCH_BOUNDS[0]),t=L.latLng(SEARCH_BOUNDS[3],SEARCH_BOUNDS[2]),n=L.latLngBounds(e,t),a=(map.setMaxBounds(n),map.options.maxBoundsViscosity=1,map.getBoundsZoom(n,!0));map.setMinZoom(a)}catch(e){}}();let currentMarker=null,searchTimeout=null,walkMaxMinutes=(window.stationIndex=window.stationIndex||{},15);const AVERAGE_WALK_SPEED_M_PER_MIN=80;let commuteTotalMinutes=45;function parseUrlParams(){var e=new URLSearchParams(window.location.search),t={},n=parseFloat(e.get("lat")),a=parseFloat(e.get("lon")),n=(!isNaN(n)&&!isNaN(a)&&-90<=n&&n<=90&&-180<=a&&a<=180&&(t.lat=n,t.lon=a),parseInt(e.get("walk"),10)),a=(!isNaN(n)&&1<=n&&n<=60&&(t.walkMaxMinutes=n),parseInt(e.get("commute"),10));return!isNaN(a)&&5<=a&&a<=180&&(t.commuteTotalMinutes=a),t}function updateUrlParams(e,t,n,a){var r=new URL(window.location);void 0!==e&&void 0!==t?(r.searchParams.set("lat",e.toFixed(6)),r.searchParams.set("lon",t.toFixed(6))):(r.searchParams.delete("lat"),r.searchParams.delete("lon")),void 0!==n&&r.searchParams.set("walk",n.toString()),void 0!==a&&r.searchParams.set("commute",a.toString()),window.history.replaceState({},"",r)}const TRANSFER_PENALTY_MIN=7,TRANSFER_PENALTY_PER_100M=.5;let isochronesVisible=!0,isochroneLayerGroup=L.layerGroup();const ISOCHRONE_BANDS=[{key:"20+",min:20,color:"#2ecc71"},{key:"10-19",min:10,max:19,color:"#f1c40f"},{key:"0-9",min:0,max:9,color:"#e67e22"}];let isochronePolygonLayers={"20+":L.geoJSON(null,{pane:"isochronesPane",interactive:!0}),"10-19":L.geoJSON(null,{pane:"isochronesPane",interactive:!0}),"0-9":L.geoJSON(null,{pane:"isochronesPane",interactive:!0})},isochroneShadowLayers={"20+":L.geoJSON(null,{pane:"isochronesPane",interactive:!1}),"10-19":L.geoJSON(null,{pane:"isochronesPane",interactive:!1}),"0-9":L.geoJSON(null,{pane:"isochronesPane",interactive:!1})},reachableDotsLayer=L.layerGroup(),nearestWalkPolygonLayer=L.geoJSON(null,{pane:"isochronesPane",interactive:!1}),fogOfWarLayer=L.geoJSON(null,{pane:"isochronesPane",interactive:!1});function buildNominatimSearchUrl(e){return`https://nominatim.openstreetmap.org/search?q=${encodeURI(e)}&viewbox=${SEARCH_BOUNDS.join(",")}&format=json&limit=10`}async function searchPlaces(e){e=buildNominatimSearchUrl(e);return(await(await fetch(e)).json()).map(e=>({coordinate:{lat:parseFloat(e.lat),lon:parseFloat(e.lon)},shortName:e.name,fullName:e.display_name})).filter(e=>SEARCH_BOUNDS[0]<=e.coordinate.lon&&e.coordinate.lon<=SEARCH_BOUNDS[2]&&SEARCH_BOUNDS[1]<=e.coordinate.lat&&e.coordinate.lat<=SEARCH_BOUNDS[3])}async function performSearch(e){var t=document.getElementById("search-panel-results");if(""===e.trim())t.classList.remove("has-results"),t.innerHTML="";else try{var n=await searchPlaces(e);if(t.classList.add("has-results"),t.innerHTML="",0===n.length){var a=document.createElement("div"),r=document.createElement("i"),o=(r.textContent="Sonuç bulunamadı: ",document.createElement("kbd"));o.textContent=e,a.appendChild(r),a.appendChild(o),t.appendChild(a)}else for(const i of n.slice(0,5))createSearchResultElement(i,t)}catch(e){console.error("Search failed:",e)}}function createSearchResultElement(e,t){var n=document.createElement("div"),a=(n.className="search-result",document.createElement("div")),r=(a.className="search-result-name",a.textContent=e.shortName,document.createElement("div"));r.className="search-result-address",r.textContent=e.fullName,n.appendChild(a),n.appendChild(r),n.addEventListener("click",function(){map.setView([e.coordinate.lat,e.coordinate.lon],15),placeMarkerAt(e.coordinate.lat,e.coordinate.lon),document.getElementById("search-input").value="",document.getElementById("search-panel-results").classList.remove("has-results"),document.getElementById("search-panel-results").innerHTML=""}),t.appendChild(n)}function haversineMeters(e,t,n,a){function r(e){return e*Math.PI/180}var o=r(n-e),a=r(a-t),t=Math.sin(o/2)*Math.sin(o/2)+Math.cos(r(e))*Math.cos(r(n))*Math.sin(a/2)*Math.sin(a/2);return 6371e3*(2*Math.atan2(Math.sqrt(t),Math.sqrt(1-t)))}function findNearestStation(n,a,e){var r=null,o=1/0,i=window.stationIndex||{};return Object.keys(i).forEach(function(e){var t,e=i[e];e&&"number"==typeof e.lat&&"number"==typeof e.lon&&(t=haversineMeters(n,a,e.lat,e.lon))<o&&(o=t,r=e)}),r&&o<=e?{station:r,distanceMeters:o}:null}function normalizeTransfers(e){return e?Array.isArray(e)?e.filter(function(e){return"string"==typeof e&&""!==e.trim()}):"string"==typeof e&&(e=e.trim())?[e]:[]:[]}function calculateTransferPenalty(e,t){return e&&t?(e=haversineMeters(e.lat,e.lon,t.lat,t.lon)/100*TRANSFER_PENALTY_PER_100M,TRANSFER_PENALTY_MIN+e):TRANSFER_PENALTY_MIN}function findStationsWithinWalk(n,a,r){var o=[],i=window.stationIndex||{};return Object.keys(i).forEach(function(e){var t,e=i[e];e&&"number"==typeof e.lat&&"number"==typeof e.lon&&(t=haversineMeters(n,a,e.lat,e.lon))<=r&&o.push({station:e,distanceMeters:t,walkMinutes:Math.round(t/AVERAGE_WALK_SPEED_M_PER_MIN)})}),o.sort(function(e,t){return e.distanceMeters-t.distanceMeters}),o}function buildMarkerPopup(e,t,n){var a='<div style="font-family:inherit;min-width:220px"><div style="font-weight:700;margin-bottom:8px">Başlangıç Noktanız</div>';if(n&&n.station){var r=(n.distanceMeters/1e3).toFixed(1),o=n.station.name||n.station.id||"Bilinmeyen istasyon",i=n.station.line||"",s=Math.round(n.distanceMeters/AVERAGE_WALK_SPEED_M_PER_MIN),l=n.distanceMeters<=walkMaxMinutes*AVERAGE_WALK_SPEED_M_PER_MIN,c=Math.max(0,commuteTotalMinutes-s),u=computeRideReachInfo(n.station,c),a=(a+='<div style="margin-bottom:8px">')+('<div style="font-weight:600;margin-bottom:4px">'+o+(i?" ("+i+")":"")+"</div>")+('<div style="font-size:13px;color:#666">'+s+" dk yürüme · "+r+" km</div>");if(l||(a+='<div style="font-size:12px;color:#e74c3c;margin-top:2px">Maksimum '+walkMaxMinutes+" dk yürüme süresini aşıyor</div>"),a+="</div>",l&&0<c){o=u?u.reachableStations:0;if(0<o){var d=getReachableLines(n.station,c),s=d.length,r=1<s?s+" farklı hat":d[0]||i;if(1<s){for(var m=window.colorByLine||{},f="",p=0;p<d.length;p++){var y=d[p];f+='<span style="display:inline-block;width:6px;height:6px;border-radius:50%;background:'+(m[y]||"#666")+';margin-left:3px;vertical-align:middle" title="'+y+'"></span>'}r+=f}a=(a=(a+='<div style="margin-bottom:6px">')+('<div style="font-size:13px;color:#333;margin-bottom:2px">'+commuteTotalMinutes+" dk içinde ulaşabileceğiniz:</div>"))+('<div style="font-size:14px"><strong>'+o+" istasyon</strong> · "+r+"</div>")+"</div>"}else a+='<div style="font-size:13px;color:#666;margin-bottom:6px">Yolculuk süresi kalmadı</div>'}a+='<div style="font-size:11px;color:#666;margin-top:6px">İşareti sürükleyin veya ayarları değiştirin</div>'}else a=(a+='<div style="margin-bottom:8px"><div style="color:#e74c3c;font-weight:600;margin-bottom:4px">Erişilebilir istasyon yok</div>')+'<div style="font-size:13px;color:#666">'+walkMaxMinutes+' dk yürüme mesafesinde metro istasyonu bulunamadı</div></div><div style="font-size:11px;color:#666;margin-top:6px">Yürüme süresini artırın veya farklı bir konum deneyin</div>';return a+="</div>"}function getReachableLines(t,n){if(!t||"number"!=typeof n||n<=0)return[];function e(e,t){var n;e&&e.id&&"number"==typeof t&&!isNaN(t)&&(void 0===(n=o[e.id])||t<n)&&(o[e.id]=t,i.push({s:e,c:t}))}var a=window.stationIndex||{},r=window.lineToStations||{},o={},i=[];for(e(t,0);0<i.length;){var s=i.shift(),l=s.s,c=s.c;if(!(n<c)){var u=r[l.line]||[],d="number"==typeof l.time?l.time:parseFloat(l.time);if("number"==typeof d&&!isNaN(d))for(var m=0;m<u.length;m++){var f=u[m],p="number"==typeof f.time?f.time:parseFloat(f.time);"number"!=typeof p||isNaN(p)||(p=c+Math.abs(p-d))<=n&&e(f,p)}if(Array.isArray(l.transfers))for(var y=0;y<l.transfers.length;y++){var h,g=l.transfers[y],g=a[g];g&&(h=c+calculateTransferPenalty(l,g))<=n&&e(g,h)}}}var v=new Set;return Object.keys(o).forEach(function(e){e!==t.id&&o[e]<=n&&(e=a[e])&&e.line&&v.add(e.line)}),Array.from(v)}function computeRideReachInfo(t,n){if(!t||"number"!=typeof n||n<=0)return null;var e=window.stationIndex||{},a=window.lineToStations||{},r=t.line;if(!r)return null;var o="number"==typeof t.time?t.time:parseFloat(t.time);if("number"!=typeof o||isNaN(o))return null;function i(e,t){var n;e&&e.id&&"number"==typeof t&&!isNaN(t)&&(void 0===(n=s[e.id])||t<n)&&(s[e.id]=t,l.push({s:e,c:t}))}var s={},l=[];for(i(t,0);0<l.length;){var c=l.shift(),u=c.s,d=c.c;if(!(n<d)){var m=a[u.line]||[],f="number"==typeof u.time?u.time:parseFloat(u.time);if("number"==typeof f&&!isNaN(f))for(var p=0;p<m.length;p++){var y=m[p],h="number"==typeof y.time?y.time:parseFloat(y.time);"number"!=typeof h||isNaN(h)||(h=d+Math.abs(h-f))<=n&&i(y,h)}if(Array.isArray(u.transfers))for(var g=0;g<u.transfers.length;g++){var v,M=e[u.transfers[g]];M&&(v=d+calculateTransferPenalty(u,M))<=n&&i(M,v)}}}return{line:r,reachableStations:Object.keys(s).filter(function(e){return e!==t.id&&s[e]<=n}).length,rideMinutes:Math.max(0,n)}}function placeMarkerAt(t,n){currentMarker&&map.removeLayer(currentMarker);var e=L.divIcon({className:"user-marker",html:'<div class="user-marker-inner"></div>',iconSize:[22,22],iconAnchor:[11,11]});currentMarker=L.marker([t,n],{draggable:!0,zIndexOffset:1e4,icon:e}).addTo(map),reverseGeocode(t,n).then(function(e){updateMarkerManageUI(t,n,e)});try{currentMarker.bringToFront()}catch(e){}e=findNearestStation(t,n,walkMaxMinutes*AVERAGE_WALK_SPEED_M_PER_MIN);currentMarker.bindPopup(buildMarkerPopup(t,n,e)),renderIsochrones(t,n),currentMarker.on("dragend",function(e){const t=e.target.getLatLng();t&&"number"==typeof t.lat&&"number"==typeof t.lng&&(updateMarkerStatus(t.lat,t.lng),updateMarkerControls(),e=findNearestStation(t.lat,t.lng,walkMaxMinutes*AVERAGE_WALK_SPEED_M_PER_MIN),currentMarker.setPopupContent(buildMarkerPopup(t.lat,t.lng,e)),renderIsochrones(t.lat,t.lng),reverseGeocode(t.lat,t.lng).then(function(e){updateMarkerManageUI(t.lat,t.lng,e)}),updateUrlParams(t.lat,t.lng,walkMaxMinutes,commuteTotalMinutes))}),updateMarkerStatus(t,n),updateMarkerControls(),updateUrlParams(t,n,walkMaxMinutes,commuteTotalMinutes)}function removeMarker(){currentMarker&&(map.removeLayer(currentMarker),currentMarker=null,updateMarkerStatus(),updateMarkerControls(),clearIsochrones(),updateUrlParams(void 0,void 0,walkMaxMinutes,commuteTotalMinutes))}function updateMarkerStatus(e,t){var n=document.getElementById("marker-status");n&&(n.textContent=void 0!==e&&void 0!==t&&null!==e&&null!==t?`İşaret ${e.toFixed(4)}, ${t.toFixed(4)} konumunda`:"İşaret yerleştirilmedi")}async function reverseGeocode(e,t){try{var n=await(await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${e}&lon=${t}&format=json`)).json();return n&&(n.display_name||n.address&&n.address.road)||""}catch(e){return""}}function updateMarkerManageUI(e,t,n){var a=document.getElementById("marker-coords"),a=(a&&(a.textContent=e&&t?e.toFixed(5)+", "+t.toFixed(5):"—"),document.getElementById("marker-address")),e=(a&&(a.textContent=n||"—"),document.getElementById("delete-marker"));e&&(e.disabled=!currentMarker)}function updateMarkerControls(){document.getElementById("delete-marker").disabled=!currentMarker}function initializeFromUrlParams(){var e=parseUrlParams(),t=(void 0!==e.walkMaxMinutes&&(walkMaxMinutes=e.walkMaxMinutes),void 0!==e.commuteTotalMinutes&&(commuteTotalMinutes=e.commuteTotalMinutes),document.getElementById("walk-max-minutes")),t=(t&&(t.value=String(walkMaxMinutes),t=document.getElementById("walk-max-minutes-value"))&&(t.textContent=String(walkMaxMinutes)),document.getElementById("commute-total-minutes"));t&&(t.value=String(commuteTotalMinutes),t=document.getElementById("commute-total-minutes-value"))&&(t.textContent=String(commuteTotalMinutes)),void 0!==e.lat&&void 0!==e.lon&&(map.setView([e.lat,e.lon]),placeMarkerAt(e.lat,e.lon))}function clearIsochrones(){if(isochroneLayerGroup&&isochroneLayerGroup.clearLayers(),Object.keys(isochronePolygonLayers).forEach(function(e){isochronePolygonLayers[e].clearLayers();try{map.removeLayer(isochronePolygonLayers[e])}catch(e){}}),Object.keys(isochroneShadowLayers).forEach(function(e){isochroneShadowLayers[e].clearLayers();try{map.removeLayer(isochroneShadowLayers[e])}catch(e){}}),nearestWalkPolygonLayer){nearestWalkPolygonLayer.clearLayers();try{map.removeLayer(nearestWalkPolygonLayer)}catch(e){}}if(window.stationWalkLayer){try{map.removeLayer(window.stationWalkLayer)}catch(e){}window.stationWalkLayer=null}if(fogOfWarLayer){fogOfWarLayer.clearLayers();try{map.removeLayer(fogOfWarLayer)}catch(e){}}if(reachableDotsLayer){reachableDotsLayer.clearLayers();try{map.removeLayer(reachableDotsLayer)}catch(e){}}}function renderIsochrones(e,t){if(isochronesVisible){clearIsochrones();var n=walkMaxMinutes*AVERAGE_WALK_SPEED_M_PER_MIN,a=findNearestStation(e,t,n);try{var r=turf.point([t,e]);0<n&&(M=turf.buffer(r,n,{units:"meters"}),nearestWalkPolygonLayer.addData(M),nearestWalkPolygonLayer.setStyle({color:"#000",weight:1.5,fillColor:"#00a0ff",fillOpacity:.12,lineJoin:"round",lineCap:"round"}),nearestWalkPolygonLayer.addTo(map))}catch(e){}if(a&&a.station)try{var o=turf.point([a.station.lon,a.station.lat]),i=turf.buffer(o,n,{units:"meters"}),s=L.geoJSON(i,{pane:"isochronesPane",style:{color:"#000",weight:2,opacity:.6,fillColor:"#fff",fillOpacity:.2,lineJoin:"round",lineCap:"round",dashArray:"4,6",className:"isochrone-band station-walk-band"}}).addTo(map);window.stationWalkLayer&&map.removeLayer(window.stationWalkLayer),window.stationWalkLayer=s}catch(e){console.warn("Failed to create station isochrone:",e)}var u=findStationsWithinWalk(e,t,n);if(u&&0!==u.length){for(var d={},m={},l=0;l<u.length;l++){var c,f,p=u[l],y=Math.max(0,commuteTotalMinutes-p.walkMinutes);y<=0||(p=bfsCommuteAll(p.station,y),c=p.remainingById||{},f=p.pathsById||{},Object.keys(c).forEach(function(e){var t=c[e];(void 0===d[e]||d[e]<t)&&(d[e]=t,m[e]=f[e]||[])}))}var h=window.stationIndex||{},g={"20+":[],"10-19":[],"0-9":[]},v=(Object.keys(d).forEach(function(e){var t=h[e];if(t){var n=d[e],a=20<=n?"20+":10<=n?"10-19":"0-9",n=Math.max(0,Math.min(n,walkMaxMinutes)),n=Math.max(120,n*AVERAGE_WALK_SPEED_M_PER_MIN),r=turf.point([t.lon,t.lat]),r=turf.buffer(r,n,{units:"meters"});g[a].push(r);try{for(var o=L.circleMarker([t.lat,t.lon],{pane:"isochroneDotsPane",radius:3,color:"#000",weight:1,fillColor:"#fff",fillOpacity:1}),i=m[e]||[],s=formatRoutePath(i,u[0].station.id),l=0;l<i.length;l++)i[l].cost;var c='<div style="min-width:220px"><div style="font-weight:700;margin-bottom:4px">'+(t.name||t.id||"İstasyon")+"</div>"+(t.line?"<div>Hat: <strong>"+t.line+"</strong></div>":"")+'<div style="font-size:11px;color:#666;margin-top:4px;line-height:1.3">'+s+"</div></div>";if(o.bindPopup(c),reachableDotsLayer.addLayer(o),window.baseStationLayers&&window.baseStationLayers[t.id])try{window.baseStationLayers[t.id].unbindPopup()}catch(e){}}catch(e){}}}),{}),r=(ISOCHRONE_BANDS.forEach(function(e){var t=g[e.key];if(t&&0!==t.length){try{t=t.map(function(e){return{f:e,a:turf.area(e)}}).sort(function(e,t){return t.a-e.a}).slice(0,800).map(function(e){return e.f})}catch(e){}for(var n=t[0],a=1;a<t.length;a++)try{n=turf.union(n,t[a])}catch(e){}v[e.key]=n||null}else v[e.key]=null}),v["20+"]?v["10-19"]?turf.difference(v["20+"],v["10-19"]):v["20+"]:null),M=v["10-19"]?v["0-9"]?turf.difference(v["10-19"],v["0-9"]):v["10-19"]:null,a=v["0-9"]||null,r=b(r),M=b(M),a=b(a);isochronePolygonLayers["20+"].clearLayers(),isochronePolygonLayers["10-19"].clearLayers(),isochronePolygonLayers["0-9"].clearLayers(),isochroneShadowLayers["20+"].clearLayers(),isochroneShadowLayers["10-19"].clearLayers(),isochroneShadowLayers["0-9"].clearLayers(),r&&isochronePolygonLayers["20+"].addData(r),M&&isochronePolygonLayers["10-19"].addData(M),a&&isochronePolygonLayers["0-9"].addData(a),isochronePolygonLayers["20+"].setStyle({color:"#000",weight:4,opacity:1,fillColor:"#fff",fillOpacity:.4,lineJoin:"round",lineCap:"round",className:"isochrone-band band-20"}),isochronePolygonLayers["10-19"].setStyle({color:"#000",weight:3,opacity:.6,fillColor:"#fff",fillOpacity:.32,lineJoin:"round",lineCap:"round",className:"isochrone-band band-10"}),isochronePolygonLayers["0-9"].setStyle({color:"#000",weight:2,opacity:.6,dashArray:"4,6",fillColor:"#fff",fillOpacity:.26,lineJoin:"round",lineCap:"round",className:"isochrone-band band-0"}),setTimeout(function(){P("20+")},0),setTimeout(function(){P("10-19")},80),setTimeout(function(){P("0-9")},160),N(isochronePolygonLayers["20+"],120),N(isochronePolygonLayers["10-19"],200),N(isochronePolygonLayers["0-9"],280),S(isochronePolygonLayers["20+"],"20+ dk"),S(isochronePolygonLayers["10-19"],"10–19 dk"),S(isochronePolygonLayers["0-9"],"0–9 dk"),reachableDotsLayer.addTo(map);try{var k=null;if(ISOCHRONE_BANDS.forEach(function(e){e=isochronePolygonLayers[e.key];e&&(e.toGeoJSON().features||[]).forEach(function(e){k=k?turf.union(k,e):e})}),(nearestWalkPolygonLayer.toGeoJSON().features||[]).forEach(function(e){k=k?turf.union(k,e):e}),k){var E=turf.bboxPolygon([-180,-85,180,85]),w=null;try{w=turf.difference(E,k)}catch(e){w=E}w&&(fogOfWarLayer.addData(w),fogOfWarLayer.setStyle({color:"#000000",weight:0,fillColor:"#000014",fillOpacity:.4}),fogOfWarLayer.addTo(map))}}catch(e){}}}else clearIsochrones();function b(e){if(!e)return null;try{e=turf.simplify(e,{tolerance:5e-4,highQuality:!0})}catch(e){}try{if(turf.area(e)<4e4)return null}catch(e){}return e}function P(e){var t=isochronePolygonLayers[e],n=isochroneShadowLayers[e];try{(t.toGeoJSON().features||[]).forEach(function(e){n.addData(e)}),n.setStyle({color:"#000",weight:8,opacity:.1,fill:!1,lineJoin:"round",lineCap:"round"}),n.addTo(map)}catch(e){}}function N(e,t){try{e.setStyle(Object.assign({},e.options.style||{},{opacity:e.options.opacity||1,fillOpacity:e.options.fillOpacity||0}))}catch(e){}setTimeout(function(){e.addTo(map)},t)}function S(e,t){try{function n(e){return e&&e.originalEvent&&e.originalEvent.preventDefault(),e&&L.DomEvent.stopPropagation(e),!1}e.bindTooltip(t,{sticky:!0,direction:"top",className:"iso-tip",offset:[0,-22],permanent:!1,interactive:!1}),e.on("mouseover",function(){this.openTooltip()}),e.on("mouseout",function(){this.closeTooltip()}),e.on("click",n),e.on("mousedown",n),e.on("mouseup",n),e.on("dblclick",n),e.on("contextmenu",n)}catch(e){}}}function bfsCommuteAll(n,a){function e(e,t,n){var a;e&&e.id&&"number"==typeof t&&!isNaN(t)&&(void 0===(a=o[e.id])||t<a)&&(o[e.id]=t,i[e.id]=n.slice(),s.push({s:e,c:t,p:n.slice()}))}var t=window.stationIndex||{},r=window.lineToStations||{},o={},i={},s=[];for(e(n,0,[]);0<s.length;){var l=s.shift(),c=l.s,u=l.c,d=l.p;if(!(a<u)){var m=r[c.line]||[],f="number"==typeof c.time?c.time:parseFloat(c.time);if("number"==typeof f&&!isNaN(f))for(var p=0;p<m.length;p++){var y,h=m[p],g="number"==typeof h.time?h.time:parseFloat(h.time);"number"!=typeof g||isNaN(g)||(y=u+(g=Math.abs(g-f)))<=a&&((k=d.slice()).push({type:"ride",line:c.line,from:c.id,to:h.id,cost:g}),e(h,y,k))}if(Array.isArray(c.transfers))for(var v=0;v<c.transfers.length;v++){var M,L,k,E=t[c.transfers[v]];E&&(L=u+(M=calculateTransferPenalty(c,E)))<=a&&((k=d.slice()).push({type:"transfer",from:c.id,to:E.id,cost:M}),e(E,L,k))}}}var w={},b={};return Object.keys(o).forEach(function(e){var t;e!==n.id&&(t=o[e])<=a&&(w[e]=Math.round(a-t),b[e]=i[e]||[])}),{remainingById:w,pathsById:b}}function formatRoutePath(e,t){if(!e||0===e.length)return"Direkt ulaşım";for(var n=window.stationIndex||{},a=window.colorByLine||{},r=[],o=null,i=null,s=0,l=0;l<e.length;l++){var c=e[l];s+=c.cost||0,"ride"===c.type?(o!==c.line&&(i&&r.push(i),i={line:o=c.line,stops:0,startStation:c.from,time:0}),i.stops++,i.endStation=c.to,i.time+=c.cost||0):"transfer"===c.type&&(i&&(r.push(i),i=null),o=null)}i&&r.push(i);for(var u="",d=0;d<r.length;d++){var m=r[d],f=(0<d&&(u+=" → "),a[m.line]||"#666"),p=n[m.startStation]&&n[m.startStation].name||m.startStation,y=n[m.endStation]&&n[m.endStation].name||m.endStation;u+=1===m.stops?'<span style="color:'+f+';font-weight:600">['+m.line+"]</span> "+p+" → "+y:'<span style="color:'+f+';font-weight:600">['+m.line+"]</span> "+m.stops+" durak"}return(u||"Direkt ulaşım")+(0<s?" (~"+Math.round(s)+" dk)":"")}L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:"&copy; OpenStreetMap contributors"}).addTo(map),map.createPane("linesPane"),map.getPane("linesPane").style.zIndex="350",map.createPane("transfersPane"),map.getPane("transfersPane").style.zIndex="500",map.createPane("stationsPane"),map.getPane("stationsPane").style.zIndex="590",map.createPane("isochronesPane"),map.getPane("isochronesPane").style.zIndex="590",map.createPane("isochroneDotsPane"),map.getPane("isochroneDotsPane").style.zIndex="595",fetch("data/stations.geojson").then(function(e){"use strict";return e.json()}).then(function(e){"use strict";var t,e=e&&e.features?e.features:[],u={},d={},m={},f={},p={},a=(e.forEach(function(e){var t,n,a,r,o,i,s,l,c;e&&e.geometry&&"Point"===e.geometry.type&&((n=e.geometry.coordinates||[]).length<2||(t=n[0],n=n[1],a=(e=e.properties||{}).id,r=e.name||a||"",o=e.line,c="number"==typeof e.order?e.order:parseFloat(e.order),l="number"==typeof e.time?e.time:parseFloat(e.time),i=!!e.ring,s=e.color||"#666",o&&!f[o]&&(f[o]=s),o&&e.line_name&&!p[o]&&(p[o]=e.line_name),a&&!u[a]&&(u[a]={id:a,name:r,lat:n,lon:t,line:o,time:isNaN(l)?void 0:l,order:isNaN(c)?void 0:c,ring:i,lines:{},transfers:normalizeTransfers(e.transfers)}),a&&(u[a].lines[o||"unknown"]=!0,o&&!u[a].line&&(u[a].line=o),isNaN(l)||void 0!==u[a].time||(u[a].time=l),isNaN(c)||void 0!==u[a].order||(u[a].order=c),i&&!0!==u[a].ring&&(u[a].ring=!0),normalizeTransfers(e.transfers).forEach(function(e){-1===u[a].transfers.indexOf(e)&&u[a].transfers.push(e)})),Array.isArray(e.transfers)&&0<e.transfers.length&&e.transfers.map(function(e){return u[e]&&u[e].name?u[e].name:e}).join(", "),l=L.circleMarker([n,t],{pane:"stationsPane",radius:6,fillColor:s,color:"#fff",weight:2,opacity:1,fillOpacity:.8}).addTo(map),c='<div style="min-width:160px"><div style="font-weight:700;margin-bottom:4px">'+r+"</div>"+(o?"<div>Hat: <strong>"+o+"</strong></div>":"")+(Array.isArray(e.transfers)&&0<e.transfers.length?"<div>Aktarma: "+e.transfers.length+"</div>":"")+"</div>",l.bindPopup(c),a&&(d[a]=l,m[a]=c)))}),window.stationIndex=u,window.baseStationLayers=d,window.baseStationPopups=m,window.colorByLine=f,u);try{Object.keys(a).forEach(function(t){var e=a[t],n=(t&&"string"==typeof t||console.warn("[stations] Missing or invalid id for station:",e&&e.name,e),"number"==typeof e.time?e.time:parseFloat(e.time));"number"==typeof n&&!isNaN(n)||console.warn("[stations] Non-numeric cumulative time for id=",t,"name=",e&&e.name,"value=",e&&e.time),e.line||console.warn("[stations] Missing line for id=",t,"name=",e&&e.name),Array.isArray(e.transfers)&&e.transfers.forEach(function(e){a[e]?-1===(a[e].transfers||[]).indexOf(t)&&console.info("[stations] One-way transfer detected. from=",t,"to=",e,"(consider adding reverse for bidirectional)"):console.warn("[stations] Transfer points to unknown id. from=",t,"to=",e)})})}catch(e){console.error("[stations] Validation failed:",e)}t={},Object.keys(u).forEach(function(e){e=u[e];e&&e.line&&(t[e.line]||(t[e.line]=[]),t[e.line].push(e))}),Object.keys(t).forEach(function(e){t[e].forEach(function(e){var t="number"==typeof e.time?e.time:parseFloat(e.time);e._cum=isNaN(t)?void 0:t}),t[e]=t[e].filter(function(e){return"number"==typeof e._cum&&!isNaN(e._cum)})}),window.lineToStations=t,initializeFromUrlParams();var i=window.lineToStations;try{Object.keys(i||{}).forEach(function(e){var t=(i[e]||[]).slice();if(!(t.length<2)){t.sort(function(e,t){var n="number"==typeof e.order?e.order:parseFloat(e.order),a="number"==typeof t.order?t.order:parseFloat(t.order);return isNaN(n)||isNaN(a)?e._cum-t._cum:n-a});for(var n=t[0],a=1;a<t.length;a++){var r=t[a],o=r._cum-n._cum;"number"==typeof r._cum&&!isNaN(r._cum)||console.warn("[lines] Non-numeric time on line",e,"station=",r&&r.id,r),o<0?console.warn("[lines] Non-monotonic cumulative time on line",e,"from",n&&n.id,"to",r&&r.id,"Δ=",o,"Check way/order."):0==o?console.info("[lines] Zero-minute segment on line",e,"between",n&&n.id,"and",r&&r.id):30<o&&console.info("[lines] Large segment time (",o,"min ) on line",e,"between",n&&n.id,"and",r&&r.id,"— verify times."),n=r}}})}catch(e){console.error("[lines] Validation failed:",e)}try{var r=document.getElementById("line-legend-list");r&&(r.innerHTML="",Object.keys(f).sort(function(e,t){return e.localeCompare(t,void 0,{numeric:!0,sensitivity:"base"})}).forEach(function(e){var t=document.createElement("button"),n=(t.type="button",t.className="legend-chip",t.title=p[e]?p[e]+" ("+e+")":"Hat "+e,document.createElement("span")),a=(n.className="legend-dot",n.style.background=f[e],document.createElement("span"));a.className="legend-label",a.textContent=e,t.appendChild(n),t.appendChild(a),r.appendChild(t)}))}catch(e){}fetch("data/lines_v3.geojson").then(function(e){return e.json()}).then(function(e){L.geoJSON(e,{pane:"linesPane",style:function(e){e=e&&e.properties&&e.properties.line;return{color:f[e]||"#555555",weight:4,opacity:.9}},onEachFeature:function(e,t){var n=e&&e.properties&&e.properties.line,e=e&&e.properties&&(e.properties.name||e.properties.line_name);t.bindPopup('<div style="min-width:160px">'+(e?'<div style="font-weight:700;margin-bottom:4px">'+e+"</div>":"")+(n?"<div>Hat kodu: <strong>"+n+"</strong></div>":"")+"</div>")}}).addTo(map)}),Object.keys(u).forEach(function(e){var t=u[e];Array.isArray(t.transfers)&&0<t.transfers.length&&(L.circleMarker([t.lat,t.lon],{pane:"transfersPane",radius:10,color:"#000",weight:6,opacity:.08,fillColor:"#000",fillOpacity:.06,interactive:!1}).addTo(map),L.circleMarker([t.lat,t.lon],{pane:"transfersPane",radius:7,color:"#000",weight:2,opacity:.95,fillColor:"#ffffff",fillOpacity:1,interactive:!1}).addTo(map),t.transfers.forEach(function(e){e&&e!==t.id&&(e=u[e])&&t.id<e.id&&L.polyline([[t.lat,t.lon],[e.lat,e.lon]],{pane:"transfersPane",color:"#000",weight:1.5,opacity:.45,dashArray:"2,6",lineCap:"round",interactive:!1}).addTo(map)}))})}).catch(function(e){"use strict";console.error("Error loading stations data:",e)}),document.addEventListener("DOMContentLoaded",function(){map.on("click",function(e){currentMarker||placeMarkerAt(e.latlng.lat,e.latlng.lng)});document.getElementById("search-input").addEventListener("input",function(e){clearTimeout(searchTimeout),searchTimeout=setTimeout(()=>{performSearch(e.target.value)},300)}),document.getElementById("place-marker-center").addEventListener("click",function(){var e=map.getCenter();placeMarkerAt(e.lat,e.lng)}),document.getElementById("delete-marker").addEventListener("click",function(){removeMarker()}),document.addEventListener("click",function(e){document.getElementById("search-container").contains(e.target)||(document.getElementById("search-panel-results").classList.remove("has-results"),document.getElementById("search-panel-results").innerHTML="")}),updateMarkerControls();var e=document.getElementById("mobile-menu-toggle"),t=document.getElementById("marker-controls"),e=(e&&t&&(e.addEventListener("click",function(){t.classList.toggle("mobile-open")}),t.addEventListener("click",function(e){e.target===t&&t.classList.remove("mobile-open")})),document.getElementById("legend-toggle")),n=document.getElementById("line-legend"),e=(e&&n&&e.addEventListener("click",function(){n.classList.toggle("open")}),L.Control.extend({options:{position:"topleft"},onAdd:function(){var e=L.DomUtil.create("div","zoom-pill"),t=L.DomUtil.create("button","zoom-btn",e),n=(t.type="button",t.innerHTML="+",L.DomUtil.create("button","zoom-btn",e));return n.type="button",n.innerHTML="−",L.DomEvent.disableClickPropagation(e),L.DomEvent.on(t,"click",function(e){L.DomEvent.stop(e),map.zoomIn()}),L.DomEvent.on(n,"click",function(e){L.DomEvent.stop(e),map.zoomOut()}),e}})),e=(map.addControl(new e),document.getElementById("walk-max-minutes")),e=(e&&e.addEventListener("input",function(e){var t,e=parseInt(e.target.value,10);!isNaN(e)&&1<=e&&e<=60&&(walkMaxMinutes=e,(t=document.getElementById("walk-max-minutes-value"))&&(t.textContent=String(e)),currentMarker&&(e=findNearestStation((t=currentMarker.getLatLng()).lat,t.lng,walkMaxMinutes*AVERAGE_WALK_SPEED_M_PER_MIN),currentMarker.setPopupContent(buildMarkerPopup(t.lat,t.lng,e)),renderIsochrones(t.lat,t.lng)),updateUrlParams(currentMarker?currentMarker.getLatLng().lat:void 0,currentMarker?currentMarker.getLatLng().lng:void 0,walkMaxMinutes,commuteTotalMinutes))}),document.getElementById("commute-total-minutes"));e&&e.addEventListener("input",function(e){var t,e=parseInt(e.target.value,10);!isNaN(e)&&5<=e&&e<=180&&(commuteTotalMinutes=e,(t=document.getElementById("commute-total-minutes-value"))&&(t.textContent=String(e)),currentMarker&&(e=findNearestStation((t=currentMarker.getLatLng()).lat,t.lng,walkMaxMinutes*AVERAGE_WALK_SPEED_M_PER_MIN),currentMarker.setPopupContent(buildMarkerPopup(t.lat,t.lng,e)),renderIsochrones(t.lat,t.lng)),updateUrlParams(currentMarker?currentMarker.getLatLng().lat:void 0,currentMarker?currentMarker.getLatLng().lng:void 0,walkMaxMinutes,commuteTotalMinutes))})});